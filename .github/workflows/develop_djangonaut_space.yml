# This workflow will build and push a Python application to an Azure Web App when a commit is pushed to your default branch.
#
# This workflow assumes you have already created the target Azure App Service web app.
# For instructions see https://docs.microsoft.com/en-us/azure/app-service/quickstart-python?tabs=bash&pivots=python-framework-flask
#
# To configure this workflow:
#
# 1. Download the Publish Profile for your Azure Web App. You can download this file from the Overview page of your Web App in the Azure Portal.
#    For more information: https://docs.microsoft.com/en-us/azure/app-service/deploy-github-actions?tabs=applevel#generate-deployment-credentials
#
# 2. Create a secret in your repository named AZURE_WEBAPP_PUBLISH_PROFILE, paste the publish profile contents as the value of the secret.
#    For instructions on obtaining the publish profile see: https://docs.microsoft.com/azure/app-service/deploy-github-actions#configure-the-github-secret
#
# 3. Change the value for the AZURE_WEBAPP_NAME. Optionally, change the PYTHON_VERSION environment variables below.
#
# For more information on GitHub Actions for Azure: https://github.com/Azure/Actions
# For more information on the Azure Web Apps Deploy action: https://github.com/Azure/webapps-deploy
# For more samples to get started with GitHub Action workflows to deploy to Azure: https://github.com/Azure/actions-workflow-samples

name: Staging build and deploy Python app to Azure Web App - djangonaut-space

env:
  AZURE_WEBAPP_NAME: staging-djangonaut-space  # set this to the name of your Azure Web App
  AZURE_WEBAPP_PACKAGE_PATH: '.'
  PYTHON_VERSION: '3.11'              # set this to the Python version to use
  NODE_VERSION: '20.11.1'

on:
  push:
    branches: [ "develop" ]
  workflow_dispatch:

jobs:
  build:
    env:
      ENVIRONMENT: 'production'
      DJANGO_SETTINGS_MODULE: 'indymeet.settings.production'
      APPINSIGHTS_INSTRUMENTATIONKEY: ${{ secrets.STAGING_APPINSIGHTS_INSTRUMENTATIONKEY }}
      APPLICATIONINSIGHTSAGENT_EXTENSION_ENABLED: 'true'
      DEBUG: 'True'
      RECAPTCHA_PRIVATE_KEY: ${{ secrets.RECAPTCHA_PRIVATE_KEY }}
      RECAPTCHA_PUBLIC_KEY: ${{ secrets.RECAPTCHA_PUBLIC_KEY }}
      SCM_DO_BUILD_DURING_DEPLOYMENT: 'true'
      SECRET_KEY: ${{ secrets.STAGING_SECRET_KEY }}
      WEBSITE_HTTPLOGGING_RETENTION_DAYS: '7'
      AZURE_ACCOUNT_NAME: ${{ secrets.AZURE_ACCOUNT_NAME }}
      AZURE_ACCOUNT_KEY: ${{ secrets.AZURE_ACCOUNT_KEY }}
      AZURE_MEDIA_CONTAINER: "staging-media"
      AZURE_STATIC_CONTAINER: "staging-static"
      # collectstatic is run in the POST_BUILD_COMMAND now
      DISABLE_COLLECTSTATIC: 'true'
      # Use a custom post build command to compile the tailwind css and collectstatic
      POST_BUILD_COMMAND: 'scripts/postbuild.sh'
      # Allow install node to support tailwind
      ENABLE_MULTIPLATFORM_BUILD: 'true'
      # Used for running `manage.py migrate` in postbuild.sh
      DATABASE_URL: ${{ secrets.STAGING_DATABASE_URL }}
    environment: staging-djangonaut-space
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4

      - name: Set up Python version
        uses: actions/setup-python@v5
        with:
          python-version: ${{ env.PYTHON_VERSION }}
          cache: 'pip'

      - name: Set up Node version
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}

      - name: Test NodeJS
        run: |
          npm ci
          npm test

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
          echo ENV
          printenv -0

      # Optional: Add step to run tests here (PyTest, Django test suites, etc.)

      - name: Building web app
        uses: azure/appservice-build@v3
      - name: Deploy web App using GH Action azure/webapps-deploy
        uses: azure/webapps-deploy@v3
        with:
          app-name: ${{ env.AZURE_WEBAPP_NAME }}
          publish-profile: ${{ secrets.STAGING_AZURE_WEBAPP_PUBLISH_PROFILE }}
          package: ${{ env.AZURE_WEBAPP_PACKAGE_PATH }}
